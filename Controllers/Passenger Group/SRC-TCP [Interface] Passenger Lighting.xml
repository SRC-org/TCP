<?xml version="1.0" encoding="UTF-8"?>
<microprocessor name="SRC-TCP [Interface] Passenger Lighting v1.3" description="Connects to passenger module. Controls lights in passenger cars" width="2" length="4" id_counter="345" id_counter_node="17" sym2="4" sym3="2" sym4="8191" sym5="8194" sym6="9508" sym7="1184" sym8="3232" sym9="11636" sym10="16388" sym11="65528" sym12="16384" sym13="8192">
	<nodes>
		<n id="7" component_id="18">
			<node label="RGB Lights" type="5" description="Ouputs RGB values to RGB lights">
				<position z="2"/>
			</node>
		</n>
		<n id="8" component_id="20">
			<node label="UI" mode="1" type="5" description="Connects to instruments or display controller">
				<position z="3"/>
			</node>
		</n>
		<n id="9" component_id="23">
			<node label="Video Out" type="6" description="To display controller">
				<position x="1" z="3"/>
			</node>
		</n>
		<n id="13" component_id="139">
			<node label="Module -> Interface" mode="1" type="5" description="Communicates with passenger module"/>
		</n>
		<n id="14" component_id="142">
			<node label="Interface -> Module" type="5" description="Communicates with passenger module">
				<position x="1"/>
			</node>
		</n>
		<n id="15" component_id="194">
			<node label="Heaters" description="Turns on/off heaters">
				<position z="1"/>
			</node>
		</n>
		<n id="17" component_id="337">
			<node label="Lights" description="Turns on non-rgb lights if lights are set to greater than the standard lights threshold">
				<position x="1" z="1"/>
			</node>
		</n>
	</nodes>
	<group>
		<data>
			<inputs/>
			<outputs/>
		</data>
		<components>
			<c type="56">
				<object id="37" script='colors={w={85,90,90},w2={70,75,75},b={10,10,10},b2={8,8,8},acc={69,12,10}}
col={a=0.5,b=0.5,c=0.5} --rgb

function touch(x,y,w,h) return t.x&gt;=x and t.y&gt;=y and t.x&lt;x+w and t.y&lt;y+h end
function onTouch(x,y,w,h) return touch(x,y,w,h) and press end
function onRelease(x,y,w,h) return touch(x,y,w,h) and pre and not press end
function onPress(x,y,w,h) return touch(x,y,w,h) and press and not pre end

function setC(v)
	sC(v[1],v[2],v[3])
end

gN=input.getNumber;gB=input.getBool;sN=output.setNumber;sB=output.setBool;
function onTick()
	press=gB(1)
	night=gB(3)
	d={w=gN(1),h=gN(2)}
	t={x=gN(3),y=gN(4)}
	
	if night then
		theme={bg=colors.b,bg2=colors.b2,fg=colors.w,acc=colors.acc}
	else
		theme={bg=colors.w,bg2=colors.w2,fg=colors.b,acc=colors.acc}
	end

	if onPress(6,24,19,9) then
		light = not light
	end
	if onPress(6,36,19,9) then
		heater = not heater
	end
	if onPress(6,48,19,9) then
		mode = not mode
	end
	
	o=math.max(d.w/2-14,29)
	tA=onTouch(o,24,7,33)
	tB=onTouch(o+11,24,7,33)
	tC=onTouch(o+22,24,7,33)
	u = tA or tB or tC
	
	if u then slide=mode and rgb2hsv(unpack(col)) or col end
	if tA then
		slide.a=(56-t.y)/32
	end
	if tB then
		slide.b=(56-t.y)/32
	end
	if tC then
		slide.c=(56-t.y)/32
	end
	if u then col=mode and hsv2rgb(unpack(slide)) or slide end
	
	if gB(4) then -- manual input
		mcol = gB(5) and hsv2rgb(gN(7),gN(8),gN(9)) or {a=gN(7),b=gN(8),c=gN(9)}
		sN(1,mcol.a)
		sN(2,mcol.b)
		sN(3,mcol.c)
	else -- ui input
		sN(1,light and col.a or 0)
		sN(2,light and col.b or 0)
		sN(3,light and col.c or 0)
	end
	sB(1,heater or gB(6))

	pre=gB(1)
end

function setC2(v)
	setC({v.a*100,v.b*100,v.c*100})
end

function dGHSV(x,y,l,c1,c2)
	dA,dB,dC = (c2.a-c1.a)/(l-1),(c2.b-c1.b)/(l-1),(c2.c-c1.c)/(l-1)
	for i=0,l-1,1 do
		setC2(hsv2rgb(unpack(c1)))
		c1.a=c1.a+dA
		c1.b=c1.b+dB
		c1.c=c1.c+dC
		dRF(x+i,y,1,1)
	end
end


function dLgt(x,y)
	dL(x,y,x+7,y)
	dL(x,y,x+4,y+3)
	dL(x+6,y,x+3,y+3)
end

function dHeat(x,y)
	dR(x,y,4,2)
	dR(x+2,y,4,2)
end

s=screen;sC=s.setColor;dTF=s.drawTriangleF;dR=s.drawRect;dRF=s.drawRectF;dT=s.drawText;dTB=s.drawTextBox;dL=s.drawLine;
function onDraw()
	w=s.getWidth()
	h=s.getHeight()
	setC(theme.bg2)
	s.drawClear()
	
	setC(theme.fg)
	dL(6,24,6,33)
	if light then
		dRF(6,24,19,9)
		setC(theme.bg2)
	end
	dT(9,26,"l")
	if not light then setC(theme.acc) end
	dLgt(15,27)
	
	setC(theme.fg)
	dL(6,36,6,45)
	if heater then
		dRF(6,36,19,9)
		setC(theme.bg2)
	end
	dT(9,38,"h")
	if not heater then setC(theme.acc) end
	dHeat(15,39)
	
	setC(theme.fg)
	dL(6,48,6,57)
	if onTouch(6,48,19,9) then
		dRF(6,48,19,9)
		setC(theme.bg2)
	end
	dT(9,50,mode and "hsv" or "rgb")

	o=math.max(w/2-14,29)
	setC(theme.bg)
	dRF(o,24,7,33)
	dRF(o+11,24,7,33)
	dRF(o+22,24,7,33)
	
	pos=mode and rgb2hsv(unpack(col)) or col
	a=math.floor(pos.a*33+0.5)
	b=math.floor(pos.b*33+0.5)
	c=math.floor(pos.c*33+0.5)
	
	setC(theme.fg)
	dRF(o,57-a,7,a)
	dRF(o+11,57-b,7,b)
	dRF(o+22,57-c,7,c)
	
	setC2(col)
	dRF(o,17,29,3)
	
	if mode then
		dGHSV(o,22,7,{a=0,b=1,c=1},{a=1,b=1,c=1})
		dGHSV(o+11,22,7,{a=pos.a,b=0,c=1},{a=pos.a,b=1,c=1})
		dGHSV(o+22,22,7,{a=0,b=0,c=0},{a=0,b=0,c=1})
	else
		setC({100,0,0})
		dL(o,22,o+7,22)
		setC({0,100,0})
		dL(o+11,22,o+18,22)
		setC({0,0,100})
		dL(o+22,22,o+29,22)
	end

end

function clamp(v,x,y) return math.min(math.max(v,x),y) end
function unpack(x) return x.a,x.b,x.c end
function rgb2hsv(a,b,c)local d,e=math.max(a,b,c),math.min(a,b,c)local f,g,h;h=d;local i=d-e;if d==0 then g=0 else g=i/d end;if d==e then f=0 else if d==a then f=(b-c)/i;if b&lt;c then f=f+6 end elseif d==b then f=(c-a)/i+2 elseif d==c then f=(a-b)/i+4 end;f=f/6 end;return{a=f,b=g,c=h}end;function hsv2rgb(f,g,h)local a,b,c;local j=math.floor(f*6)local k=f*6-j;local l=h*(1-g)local m=h*(1-k*g)local n=h*(1-(1-k)*g)j=j%6;if j==0 then a,b,c=h,n,l elseif j==1 then a,b,c=m,h,l elseif j==2 then a,b,c=l,h,n elseif j==3 then a,b,c=l,m,h elseif j==4 then a,b,c=n,l,h elseif j==5 then a,b,c=h,l,m end;return{a=a,b=b,c=c}end'>
					<pos x="-6.25" y="5.75"/>
					<in1 component_id="20"/>
				</object>
			</c>
			<c type="40">
				<object id="40" count="3">
					<pos x="2.5" y="3"/>
					<in1 component_id="77"/>
					<in2 component_id="309"/>
					<in3 component_id="313"/>
				</object>
			</c>
			<c type="17">
				<object id="68">
					<pos x="-4.5" y="3.25"/>
					<in1 component_id="225"/>
					<in2 component_id="77"/>
				</object>
			</c>
			<c type="18">
				<object id="69">
					<pos x="-4.5" y="1.75"/>
					<in1 component_id="225"/>
					<in2 component_id="77"/>
				</object>
			</c>
			<c type="37">
				<object id="77" m="1">
					<pos x="0.75" y="3"/>
					<in1 component_id="80"/>
					<in2 component_id="83"/>
					<r text="0"/>
					<i text="0.003" value="0.003"/>
					<min text="0"/>
					<max text="1" value="1"/>
				</object>
			</c>
			<c type="1">
				<object id="80">
					<pos x="-1" y="3.25"/>
					<in1 component_id="68"/>
					<in2 component_id="308"/>
				</object>
			</c>
			<c type="1">
				<object id="83">
					<pos x="-1" y="2"/>
					<in1 component_id="308"/>
					<in2 component_id="69"/>
				</object>
			</c>
			<c type="42">
				<object id="91">
					<pos x="-4.5" y="2.5"/>
					<in1 component_id="225"/>
					<in2 component_id="77"/>
					<e text="0.0015" value="0.0015"/>
				</object>
			</c>
			<c type="17">
				<object id="95">
					<pos x="-4.5" y="0.75"/>
					<in1 component_id="226"/>
					<in2 component_id="309"/>
				</object>
			</c>
			<c type="18">
				<object id="96">
					<pos x="-4.5" y="-0.75"/>
					<in1 component_id="226"/>
					<in2 component_id="309"/>
				</object>
			</c>
			<c type="42">
				<object id="103">
					<pos x="-4.5"/>
					<in1 component_id="226"/>
					<in2 component_id="309"/>
					<e text="0.0015" value="0.0015"/>
				</object>
			</c>
			<c type="17">
				<object id="109">
					<pos x="-4.5" y="-1.75"/>
					<in1 component_id="227"/>
					<in2 component_id="313"/>
				</object>
			</c>
			<c type="18">
				<object id="110">
					<pos x="-4.5" y="-3.25"/>
					<in1 component_id="227"/>
					<in2 component_id="313"/>
				</object>
			</c>
			<c type="42">
				<object id="117">
					<pos x="-4.5" y="-2.5"/>
					<in1 component_id="227"/>
					<in2 component_id="313"/>
					<e text="0.0015" value="0.0015"/>
				</object>
			</c>
			<c type="31">
				<object id="225" i="5">
					<pos x="-6.25" y="3.5"/>
					<in1 component_id="139"/>
				</object>
			</c>
			<c type="31">
				<object id="226" i="6">
					<pos x="-6.25" y="3"/>
					<in1 component_id="139"/>
				</object>
			</c>
			<c type="31">
				<object id="227" i="7">
					<pos x="-6.25" y="2.5"/>
					<in1 component_id="139"/>
				</object>
			</c>
			<c type="29">
				<object id="228" i="6">
					<pos x="-6.25" y="4.5"/>
					<in1 component_id="139"/>
				</object>
			</c>
			<c>
				<object id="308">
					<pos x="-2.75" y="2.75"/>
					<in1 component_id="91"/>
				</object>
			</c>
			<c type="37">
				<object id="309" m="1">
					<pos x="0.75" y="0.5"/>
					<in1 component_id="310"/>
					<in2 component_id="311"/>
					<r text="0"/>
					<i text="0.003" value="0.003"/>
					<min text="0"/>
					<max text="1" value="1"/>
				</object>
			</c>
			<c type="1">
				<object id="310">
					<pos x="-1" y="0.75"/>
					<in1 component_id="95"/>
					<in2 component_id="312"/>
				</object>
			</c>
			<c type="1">
				<object id="311">
					<pos x="-1" y="-0.5"/>
					<in1 component_id="312"/>
					<in2 component_id="96"/>
				</object>
			</c>
			<c>
				<object id="312">
					<pos x="-2.75" y="0.25"/>
					<in1 component_id="103"/>
				</object>
			</c>
			<c type="37">
				<object id="313" m="1">
					<pos x="0.75" y="-2"/>
					<in1 component_id="314"/>
					<in2 component_id="315"/>
					<r text="0"/>
					<i text="0.003" value="0.003"/>
					<min text="0"/>
					<max text="1" value="1"/>
				</object>
			</c>
			<c type="1">
				<object id="314">
					<pos x="-1" y="-1.75"/>
					<in1 component_id="109"/>
					<in2 component_id="316"/>
				</object>
			</c>
			<c type="1">
				<object id="315">
					<pos x="-1" y="-3"/>
					<in1 component_id="316"/>
					<in2 component_id="110"/>
				</object>
			</c>
			<c>
				<object id="316">
					<pos x="-2.75" y="-2.25"/>
					<in1 component_id="117"/>
				</object>
			</c>
			<c type="2">
				<object id="329">
					<pos x="4.25" y="1.75"/>
					<in1 component_id="331"/>
					<in2 component_id="330"/>
				</object>
			</c>
			<c type="2">
				<object id="330">
					<pos x="4.25" y="0.75"/>
					<in1 component_id="332"/>
					<in2 component_id="333"/>
				</object>
			</c>
			<c type="17">
				<object id="331">
					<pos x="2.5" y="1.75"/>
					<in1 component_id="77"/>
					<in2 component_id="334"/>
				</object>
			</c>
			<c type="17">
				<object id="332">
					<pos x="2.5" y="0.75"/>
					<in1 component_id="309"/>
					<in2 component_id="334"/>
				</object>
			</c>
			<c type="17">
				<object id="333">
					<pos x="2.5" y="-0.25"/>
					<in1 component_id="313"/>
					<in2 component_id="334"/>
				</object>
			</c>
			<c type="19">
				<object id="334" name="Standard Light Turn-On Threshold">
					<pos x="0.75" y="1.75"/>
					<min text="0"/>
					<max text="1" value="1"/>
					<int text="0.1" value="0.1"/>
					<v text="0"/>
				</object>
			</c>
		</components>
		<components_bridge>
			<c type="5">
				<object id="18">
					<pos x="4" y="3.75"/>
					<in1 component_id="40"/>
				</object>
			</c>
			<c type="4">
				<object id="20">
					<pos x="-8" y="6"/>
				</object>
			</c>
			<c type="7">
				<object id="23">
					<pos x="-6.25" y="5.25"/>
					<in1 component_id="37" node_index="1"/>
				</object>
			</c>
			<c type="4">
				<object id="139">
					<pos x="-8" y="4.5"/>
				</object>
			</c>
			<c type="5">
				<object id="142">
					<pos x="-4.5" y="6"/>
					<in1 component_id="37"/>
				</object>
			</c>
			<c type="1">
				<object id="194">
					<pos x="-4.5" y="4.5"/>
					<in1 component_id="228"/>
				</object>
			</c>
			<c type="1">
				<object id="337">
					<pos x="6" y="2"/>
					<in1 component_id="329"/>
				</object>
			</c>
		</components_bridge>
		<groups/>
		<component_states>
			<c0 id="37" script='colors={w={85,90,90},w2={70,75,75},b={10,10,10},b2={8,8,8},acc={69,12,10}}
col={a=0.5,b=0.5,c=0.5} --rgb

function touch(x,y,w,h) return t.x&gt;=x and t.y&gt;=y and t.x&lt;x+w and t.y&lt;y+h end
function onTouch(x,y,w,h) return touch(x,y,w,h) and press end
function onRelease(x,y,w,h) return touch(x,y,w,h) and pre and not press end
function onPress(x,y,w,h) return touch(x,y,w,h) and press and not pre end

function setC(v)
	sC(v[1],v[2],v[3])
end

gN=input.getNumber;gB=input.getBool;sN=output.setNumber;sB=output.setBool;
function onTick()
	press=gB(1)
	night=gB(3)
	d={w=gN(1),h=gN(2)}
	t={x=gN(3),y=gN(4)}
	
	if night then
		theme={bg=colors.b,bg2=colors.b2,fg=colors.w,acc=colors.acc}
	else
		theme={bg=colors.w,bg2=colors.w2,fg=colors.b,acc=colors.acc}
	end

	if onPress(6,24,19,9) then
		light = not light
	end
	if onPress(6,36,19,9) then
		heater = not heater
	end
	if onPress(6,48,19,9) then
		mode = not mode
	end
	
	o=math.max(d.w/2-14,29)
	tA=onTouch(o,24,7,33)
	tB=onTouch(o+11,24,7,33)
	tC=onTouch(o+22,24,7,33)
	u = tA or tB or tC
	
	if u then slide=mode and rgb2hsv(unpack(col)) or col end
	if tA then
		slide.a=(56-t.y)/32
	end
	if tB then
		slide.b=(56-t.y)/32
	end
	if tC then
		slide.c=(56-t.y)/32
	end
	if u then col=mode and hsv2rgb(unpack(slide)) or slide end
	
	if gB(4) then -- manual input
		mcol = gB(5) and hsv2rgb(gN(7),gN(8),gN(9)) or {a=gN(7),b=gN(8),c=gN(9)}
		sN(1,mcol.a)
		sN(2,mcol.b)
		sN(3,mcol.c)
	else -- ui input
		sN(1,light and col.a or 0)
		sN(2,light and col.b or 0)
		sN(3,light and col.c or 0)
	end
	sB(1,heater or gB(6))

	pre=gB(1)
end

function setC2(v)
	setC({v.a*100,v.b*100,v.c*100})
end

function dGHSV(x,y,l,c1,c2)
	dA,dB,dC = (c2.a-c1.a)/(l-1),(c2.b-c1.b)/(l-1),(c2.c-c1.c)/(l-1)
	for i=0,l-1,1 do
		setC2(hsv2rgb(unpack(c1)))
		c1.a=c1.a+dA
		c1.b=c1.b+dB
		c1.c=c1.c+dC
		dRF(x+i,y,1,1)
	end
end


function dLgt(x,y)
	dL(x,y,x+7,y)
	dL(x,y,x+4,y+3)
	dL(x+6,y,x+3,y+3)
end

function dHeat(x,y)
	dR(x,y,4,2)
	dR(x+2,y,4,2)
end

s=screen;sC=s.setColor;dTF=s.drawTriangleF;dR=s.drawRect;dRF=s.drawRectF;dT=s.drawText;dTB=s.drawTextBox;dL=s.drawLine;
function onDraw()
	w=s.getWidth()
	h=s.getHeight()
	setC(theme.bg2)
	s.drawClear()
	
	setC(theme.fg)
	dL(6,24,6,33)
	if light then
		dRF(6,24,19,9)
		setC(theme.bg2)
	end
	dT(9,26,"l")
	if not light then setC(theme.acc) end
	dLgt(15,27)
	
	setC(theme.fg)
	dL(6,36,6,45)
	if heater then
		dRF(6,36,19,9)
		setC(theme.bg2)
	end
	dT(9,38,"h")
	if not heater then setC(theme.acc) end
	dHeat(15,39)
	
	setC(theme.fg)
	dL(6,48,6,57)
	if onTouch(6,48,19,9) then
		dRF(6,48,19,9)
		setC(theme.bg2)
	end
	dT(9,50,mode and "hsv" or "rgb")

	o=math.max(w/2-14,29)
	setC(theme.bg)
	dRF(o,24,7,33)
	dRF(o+11,24,7,33)
	dRF(o+22,24,7,33)
	
	pos=mode and rgb2hsv(unpack(col)) or col
	a=math.floor(pos.a*33+0.5)
	b=math.floor(pos.b*33+0.5)
	c=math.floor(pos.c*33+0.5)
	
	setC(theme.fg)
	dRF(o,57-a,7,a)
	dRF(o+11,57-b,7,b)
	dRF(o+22,57-c,7,c)
	
	setC2(col)
	dRF(o,17,29,3)
	
	if mode then
		dGHSV(o,22,7,{a=0,b=1,c=1},{a=1,b=1,c=1})
		dGHSV(o+11,22,7,{a=pos.a,b=0,c=1},{a=pos.a,b=1,c=1})
		dGHSV(o+22,22,7,{a=0,b=0,c=0},{a=0,b=0,c=1})
	else
		setC({100,0,0})
		dL(o,22,o+7,22)
		setC({0,100,0})
		dL(o+11,22,o+18,22)
		setC({0,0,100})
		dL(o+22,22,o+29,22)
	end

end

function clamp(v,x,y) return math.min(math.max(v,x),y) end
function unpack(x) return x.a,x.b,x.c end
function rgb2hsv(a,b,c)local d,e=math.max(a,b,c),math.min(a,b,c)local f,g,h;h=d;local i=d-e;if d==0 then g=0 else g=i/d end;if d==e then f=0 else if d==a then f=(b-c)/i;if b&lt;c then f=f+6 end elseif d==b then f=(c-a)/i+2 elseif d==c then f=(a-b)/i+4 end;f=f/6 end;return{a=f,b=g,c=h}end;function hsv2rgb(f,g,h)local a,b,c;local j=math.floor(f*6)local k=f*6-j;local l=h*(1-g)local m=h*(1-k*g)local n=h*(1-(1-k)*g)j=j%6;if j==0 then a,b,c=h,n,l elseif j==1 then a,b,c=m,h,l elseif j==2 then a,b,c=l,h,n elseif j==3 then a,b,c=l,m,h elseif j==4 then a,b,c=n,l,h elseif j==5 then a,b,c=h,l,m end;return{a=a,b=b,c=c}end'>
				<pos x="-6.25" y="5.75"/>
				<in1 component_id="20"/>
			</c0>
			<c1 id="40" count="3">
				<pos x="2.5" y="3"/>
				<in1 component_id="77"/>
				<in2 component_id="309"/>
				<in3 component_id="313"/>
			</c1>
			<c2 id="68">
				<pos x="-4.5" y="3.25"/>
				<in1 component_id="225"/>
				<in2 component_id="77"/>
			</c2>
			<c3 id="69">
				<pos x="-4.5" y="1.75"/>
				<in1 component_id="225"/>
				<in2 component_id="77"/>
			</c3>
			<c4 id="77" m="1">
				<pos x="0.75" y="3"/>
				<in1 component_id="80"/>
				<in2 component_id="83"/>
				<r text="0"/>
				<i text="0.003" value="0.003"/>
				<min text="0"/>
				<max text="1" value="1"/>
			</c4>
			<c5 id="80">
				<pos x="-1" y="3.25"/>
				<in1 component_id="68"/>
				<in2 component_id="308"/>
			</c5>
			<c6 id="83">
				<pos x="-1" y="2"/>
				<in1 component_id="308"/>
				<in2 component_id="69"/>
			</c6>
			<c7 id="91">
				<pos x="-4.5" y="2.5"/>
				<in1 component_id="225"/>
				<in2 component_id="77"/>
				<e text="0.0015" value="0.0015"/>
			</c7>
			<c8 id="95">
				<pos x="-4.5" y="0.75"/>
				<in1 component_id="226"/>
				<in2 component_id="309"/>
			</c8>
			<c9 id="96">
				<pos x="-4.5" y="-0.75"/>
				<in1 component_id="226"/>
				<in2 component_id="309"/>
			</c9>
			<c10 id="103">
				<pos x="-4.5"/>
				<in1 component_id="226"/>
				<in2 component_id="309"/>
				<e text="0.0015" value="0.0015"/>
			</c10>
			<c11 id="109">
				<pos x="-4.5" y="-1.75"/>
				<in1 component_id="227"/>
				<in2 component_id="313"/>
			</c11>
			<c12 id="110">
				<pos x="-4.5" y="-3.25"/>
				<in1 component_id="227"/>
				<in2 component_id="313"/>
			</c12>
			<c13 id="117">
				<pos x="-4.5" y="-2.5"/>
				<in1 component_id="227"/>
				<in2 component_id="313"/>
				<e text="0.0015" value="0.0015"/>
			</c13>
			<c14 id="225" i="5">
				<pos x="-6.25" y="3.5"/>
				<in1 component_id="139"/>
			</c14>
			<c15 id="226" i="6">
				<pos x="-6.25" y="3"/>
				<in1 component_id="139"/>
			</c15>
			<c16 id="227" i="7">
				<pos x="-6.25" y="2.5"/>
				<in1 component_id="139"/>
			</c16>
			<c17 id="228" i="6">
				<pos x="-6.25" y="4.5"/>
				<in1 component_id="139"/>
			</c17>
			<c18 id="308">
				<pos x="-2.75" y="2.75"/>
				<in1 component_id="91"/>
			</c18>
			<c19 id="309" m="1">
				<pos x="0.75" y="0.5"/>
				<in1 component_id="310"/>
				<in2 component_id="311"/>
				<r text="0"/>
				<i text="0.003" value="0.003"/>
				<min text="0"/>
				<max text="1" value="1"/>
			</c19>
			<c20 id="310">
				<pos x="-1" y="0.75"/>
				<in1 component_id="95"/>
				<in2 component_id="312"/>
			</c20>
			<c21 id="311">
				<pos x="-1" y="-0.5"/>
				<in1 component_id="312"/>
				<in2 component_id="96"/>
			</c21>
			<c22 id="312">
				<pos x="-2.75" y="0.25"/>
				<in1 component_id="103"/>
			</c22>
			<c23 id="313" m="1">
				<pos x="0.75" y="-2"/>
				<in1 component_id="314"/>
				<in2 component_id="315"/>
				<r text="0"/>
				<i text="0.003" value="0.003"/>
				<min text="0"/>
				<max text="1" value="1"/>
			</c23>
			<c24 id="314">
				<pos x="-1" y="-1.75"/>
				<in1 component_id="109"/>
				<in2 component_id="316"/>
			</c24>
			<c25 id="315">
				<pos x="-1" y="-3"/>
				<in1 component_id="316"/>
				<in2 component_id="110"/>
			</c25>
			<c26 id="316">
				<pos x="-2.75" y="-2.25"/>
				<in1 component_id="117"/>
			</c26>
			<c27 id="329">
				<pos x="4.25" y="1.75"/>
				<in1 component_id="331"/>
				<in2 component_id="330"/>
			</c27>
			<c28 id="330">
				<pos x="4.25" y="0.75"/>
				<in1 component_id="332"/>
				<in2 component_id="333"/>
			</c28>
			<c29 id="331">
				<pos x="2.5" y="1.75"/>
				<in1 component_id="77"/>
				<in2 component_id="334"/>
			</c29>
			<c30 id="332">
				<pos x="2.5" y="0.75"/>
				<in1 component_id="309"/>
				<in2 component_id="334"/>
			</c30>
			<c31 id="333">
				<pos x="2.5" y="-0.25"/>
				<in1 component_id="313"/>
				<in2 component_id="334"/>
			</c31>
			<c32 id="334" name="Standard Light Turn-On Threshold">
				<pos x="0.75" y="1.75"/>
				<min text="0"/>
				<max text="1" value="1"/>
				<int text="0.1" value="0.1"/>
				<v text="0"/>
			</c32>
		</component_states>
		<component_bridge_states>
			<c0 id="18">
				<pos x="4" y="3.75"/>
				<in1 component_id="40"/>
			</c0>
			<c1 id="20">
				<pos x="-8" y="6"/>
			</c1>
			<c2 id="23">
				<pos x="-6.25" y="5.25"/>
				<in1 component_id="37" node_index="1"/>
			</c2>
			<c3 id="139">
				<pos x="-8" y="4.5"/>
			</c3>
			<c4 id="142">
				<pos x="-4.5" y="6"/>
				<in1 component_id="37"/>
			</c4>
			<c5 id="194">
				<pos x="-4.5" y="4.5"/>
				<in1 component_id="228"/>
			</c5>
			<c6 id="337">
				<pos x="6" y="2"/>
				<in1 component_id="329"/>
			</c6>
		</component_bridge_states>
		<group_states/>
	</group>
</microprocessor>

